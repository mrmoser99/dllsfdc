//Generated by wsdl2apex

public class AsyncXgServicesAccount {
    public class ChangePasswordResponse_elementFuture extends System.WebServiceCalloutFuture {
        public Boolean getValue() {
            XgServicesAccount.ChangePasswordResponse_element response = (XgServicesAccount.ChangePasswordResponse_element)System.WebServiceCallout.endInvoke(this);
            return response.ChangePasswordResult;
        }
    }
    public class GetDaysUntilPasswordExpiresResponse_elementFuture extends System.WebServiceCalloutFuture {
        public Integer getValue() {
            XgServicesAccount.GetDaysUntilPasswordExpiresResponse_element response = (XgServicesAccount.GetDaysUntilPasswordExpiresResponse_element)System.WebServiceCallout.endInvoke(this);
            return response.GetDaysUntilPasswordExpiresResult;
        }
    }
    public class AsyncBasicHttpBinding_IAccount {
        public String endpoint_x = 'https://bridgerinsight.lexisnexis.com/WebServicesAPI/10.2/XGServices.svc/Account';
        public Map<String,String> inputHttpHeaders_x;
        public String clientCertName_x;
        public Integer timeout_x;
        private String[] ns_map_type_info = new String[]{'http://microsoft.com/wsdl/types/', 'microsoftComWsdlTypes', 'http://schemas.microsoft.com/2003/10/Serialization/', 'schemasMicrosoftCom200310Serializat', 'https://bridgerinsight.lexisnexis.com/BridgerInsight.Web.Services.Interfaces.10.2', 'XgServicesAccount'};
        public AsyncXgServicesAccount.ChangePasswordResponse_elementFuture beginChangePassword(System.Continuation continuation,XgServicesAccount.ClientContext context,String newPassword) {
            XgServicesAccount.ChangePassword_element request_x = new XgServicesAccount.ChangePassword_element();
            request_x.context = context;
            request_x.newPassword = newPassword;
            return (AsyncXgServicesAccount.ChangePasswordResponse_elementFuture) System.WebServiceCallout.beginInvoke(
              this,
              request_x,
              AsyncXgServicesAccount.ChangePasswordResponse_elementFuture.class,
              continuation,
              new String[]{endpoint_x,
              'https://bridgerinsight.lexisnexis.com/BridgerInsight.Web.Services.Interfaces.10.2/IAccount/ChangePassword',
              'https://bridgerinsight.lexisnexis.com/BridgerInsight.Web.Services.Interfaces.10.2',
              'ChangePassword',
              'https://bridgerinsight.lexisnexis.com/BridgerInsight.Web.Services.Interfaces.10.2',
              'ChangePasswordResponse',
              'XgServicesAccount.ChangePasswordResponse_element'}
            );
        }
        public AsyncXgServicesAccount.GetDaysUntilPasswordExpiresResponse_elementFuture beginGetDaysUntilPasswordExpires(System.Continuation continuation,XgServicesAccount.ClientContext context) {
            XgServicesAccount.GetDaysUntilPasswordExpires_element request_x = new XgServicesAccount.GetDaysUntilPasswordExpires_element();
            request_x.context = context;
            return (AsyncXgServicesAccount.GetDaysUntilPasswordExpiresResponse_elementFuture) System.WebServiceCallout.beginInvoke(
              this,
              request_x,
              AsyncXgServicesAccount.GetDaysUntilPasswordExpiresResponse_elementFuture.class,
              continuation,
              new String[]{endpoint_x,
              'https://bridgerinsight.lexisnexis.com/BridgerInsight.Web.Services.Interfaces.10.2/IAccount/GetDaysUntilPasswordExpires',
              'https://bridgerinsight.lexisnexis.com/BridgerInsight.Web.Services.Interfaces.10.2',
              'GetDaysUntilPasswordExpires',
              'https://bridgerinsight.lexisnexis.com/BridgerInsight.Web.Services.Interfaces.10.2',
              'GetDaysUntilPasswordExpiresResponse',
              'XgServicesAccount.GetDaysUntilPasswordExpiresResponse_element'}
            );
        }
    }
}